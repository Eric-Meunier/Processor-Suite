# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'pem_hub.ui'
##
## Created by: Qt User Interface Compiler version 5.15.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide2.QtCore import *
from PySide2.QtGui import *
from PySide2.QtWidgets import *


class Ui_PEMHub(object):
    def setupUi(self, PEMHub):
        if not PEMHub.objectName():
            PEMHub.setObjectName(u"PEMHub")
        PEMHub.resize(1543, 846)
        sizePolicy = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(PEMHub.sizePolicy().hasHeightForWidth())
        PEMHub.setSizePolicy(sizePolicy)
        icon = QIcon()
        icon.addFile(u"icons/conder.png", QSize(), QIcon.Normal, QIcon.Off)
        PEMHub.setWindowIcon(icon)
        self.actionOpen = QAction(PEMHub)
        self.actionOpen.setObjectName(u"actionOpen")
        self.actionSave_Files = QAction(PEMHub)
        self.actionSave_Files.setObjectName(u"actionSave_Files")
        self.actionOpenFile = QAction(PEMHub)
        self.actionOpenFile.setObjectName(u"actionOpenFile")
        icon1 = QIcon()
        icon1.addFile(u"icons/open.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOpenFile.setIcon(icon1)
        self.actionOpenFile.setShortcutVisibleInContextMenu(True)
        self.actionSaveFiles = QAction(PEMHub)
        self.actionSaveFiles.setObjectName(u"actionSaveFiles")
        icon2 = QIcon()
        icon2.addFile(u"icons/save.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSaveFiles.setIcon(icon2)
        self.actionExport_As_XYZ = QAction(PEMHub)
        self.actionExport_As_XYZ.setObjectName(u"actionExport_As_XYZ")
        self.actionExport_Final_PEM_Files = QAction(PEMHub)
        self.actionExport_Final_PEM_Files.setObjectName(u"actionExport_Final_PEM_Files")
        self.actionBackup_Files = QAction(PEMHub)
        self.actionBackup_Files.setObjectName(u"actionBackup_Files")
        self.actionImport_RI_Files = QAction(PEMHub)
        self.actionImport_RI_Files.setObjectName(u"actionImport_RI_Files")
        self.actionPrint_Plots_to_PDF = QAction(PEMHub)
        self.actionPrint_Plots_to_PDF.setObjectName(u"actionPrint_Plots_to_PDF")
        icon3 = QIcon()
        icon3.addFile(u"icons/pdf.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPrint_Plots_to_PDF.setIcon(icon3)
        self.actionRename_All_Lines_Holes = QAction(PEMHub)
        self.actionRename_All_Lines_Holes.setObjectName(u"actionRename_All_Lines_Holes")
        self.actionAverage_All_PEM_Files = QAction(PEMHub)
        self.actionAverage_All_PEM_Files.setObjectName(u"actionAverage_All_PEM_Files")
        icon4 = QIcon()
        icon4.addFile(u"icons/average.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAverage_All_PEM_Files.setIcon(icon4)
        self.actionSplit_All_PEM_Files = QAction(PEMHub)
        self.actionSplit_All_PEM_Files.setObjectName(u"actionSplit_All_PEM_Files")
        icon5 = QIcon()
        icon5.addFile(u"icons/split.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSplit_All_PEM_Files.setIcon(icon5)
        self.actionScale_All_Currents = QAction(PEMHub)
        self.actionScale_All_Currents.setObjectName(u"actionScale_All_Currents")
        icon6 = QIcon()
        icon6.addFile(u"icons/current.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionScale_All_Currents.setIcon(icon6)
        self.actionChange_All_Coil_Areas = QAction(PEMHub)
        self.actionChange_All_Coil_Areas.setObjectName(u"actionChange_All_Coil_Areas")
        icon7 = QIcon()
        icon7.addFile(u"icons/coil.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionChange_All_Coil_Areas.setIcon(icon7)
        self.actionSave_as_KMZ = QAction(PEMHub)
        self.actionSave_as_KMZ.setObjectName(u"actionSave_as_KMZ")
        icon8 = QIcon()
        icon8.addFile(u"icons/google_earth.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSave_as_KMZ.setIcon(icon8)
        self.actionExport_All_GPS = QAction(PEMHub)
        self.actionExport_All_GPS.setObjectName(u"actionExport_All_GPS")
        icon9 = QIcon()
        icon9.addFile(u"icons/csv.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionExport_All_GPS.setIcon(icon9)
        self.actionPlan_Map = QAction(PEMHub)
        self.actionPlan_Map.setObjectName(u"actionPlan_Map")
        self.action3D_Map = QAction(PEMHub)
        self.action3D_Map.setObjectName(u"action3D_Map")
        icon10 = QIcon()
        icon10.addFile(u"icons/3d_map.png", QSize(), QIcon.Normal, QIcon.Off)
        self.action3D_Map.setIcon(icon10)
        self.actionContour_Map = QAction(PEMHub)
        self.actionContour_Map.setObjectName(u"actionContour_Map")
        icon11 = QIcon()
        icon11.addFile(u"icons/contour_map.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionContour_Map.setIcon(icon11)
        self.actionLoop_Planner = QAction(PEMHub)
        self.actionLoop_Planner.setObjectName(u"actionLoop_Planner")
        icon12 = QIcon()
        icon12.addFile(u"icons/loop_planner.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionLoop_Planner.setIcon(icon12)
        self.actionGrid_Planner = QAction(PEMHub)
        self.actionGrid_Planner.setObjectName(u"actionGrid_Planner")
        icon13 = QIcon()
        icon13.addFile(u"icons/grid_planner.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionGrid_Planner.setIcon(icon13)
        self.actionConvert_Timebase_Frequency = QAction(PEMHub)
        self.actionConvert_Timebase_Frequency.setObjectName(u"actionConvert_Timebase_Frequency")
        icon14 = QIcon()
        icon14.addFile(u"icons/freq_timebase_calc.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionConvert_Timebase_Frequency.setIcon(icon14)
        self.actionDamping_Box_Plotter = QAction(PEMHub)
        self.actionDamping_Box_Plotter.setObjectName(u"actionDamping_Box_Plotter")
        icon15 = QIcon()
        icon15.addFile(u"icons/db_plot.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionDamping_Box_Plotter.setIcon(icon15)
        self.actionUnpacker = QAction(PEMHub)
        self.actionUnpacker.setObjectName(u"actionUnpacker")
        icon16 = QIcon()
        icon16.addFile(u"icons/unpacker.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionUnpacker.setIcon(icon16)
        self.actionGPX_Creator = QAction(PEMHub)
        self.actionGPX_Creator.setObjectName(u"actionGPX_Creator")
        icon17 = QIcon()
        icon17.addFile(u"icons/garmin_file.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionGPX_Creator.setIcon(icon17)
        self.actionAuto_name_Lines_Holes = QAction(PEMHub)
        self.actionAuto_name_Lines_Holes.setObjectName(u"actionAuto_name_Lines_Holes")
        self.actionAuto_Merge_All_Files = QAction(PEMHub)
        self.actionAuto_Merge_All_Files.setObjectName(u"actionAuto_Merge_All_Files")
        self.actionReverseX_Component = QAction(PEMHub)
        self.actionReverseX_Component.setObjectName(u"actionReverseX_Component")
        self.actionReverseY_Component = QAction(PEMHub)
        self.actionReverseY_Component.setObjectName(u"actionReverseY_Component")
        self.actionReverseZ_Component = QAction(PEMHub)
        self.actionReverseZ_Component.setObjectName(u"actionReverseZ_Component")
        self.actionRename_Files = QAction(PEMHub)
        self.actionRename_Files.setObjectName(u"actionRename_Files")
        self.actionRename_Lines_Holes = QAction(PEMHub)
        self.actionRename_Lines_Holes.setObjectName(u"actionRename_Lines_Holes")
        self.actionAuto_Name_Lines_Holes = QAction(PEMHub)
        self.actionAuto_Name_Lines_Holes.setObjectName(u"actionAuto_Name_Lines_Holes")
        self.actionAuto_Name_Repeat_Stations = QAction(PEMHub)
        self.actionAuto_Name_Repeat_Stations.setObjectName(u"actionAuto_Name_Repeat_Stations")
        self.actionSort_Table_on_Import = QAction(PEMHub)
        self.actionSort_Table_on_Import.setObjectName(u"actionSort_Table_on_Import")
        self.actionConvert_GPS = QAction(PEMHub)
        self.actionConvert_GPS.setObjectName(u"actionConvert_GPS")
        icon18 = QIcon()
        icon18.addFile(u"icons/convert_gps.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionConvert_GPS.setIcon(icon18)
        self.auto_sort_files_cbox = QAction(PEMHub)
        self.auto_sort_files_cbox.setObjectName(u"auto_sort_files_cbox")
        self.auto_sort_files_cbox.setCheckable(True)
        self.auto_sort_files_cbox.setChecked(True)
        self.auto_create_backup_files_cbox = QAction(PEMHub)
        self.auto_create_backup_files_cbox.setObjectName(u"auto_create_backup_files_cbox")
        self.auto_create_backup_files_cbox.setCheckable(True)
        self.auto_create_backup_files_cbox.setChecked(True)
        self.delete_merged_files_cbox = QAction(PEMHub)
        self.delete_merged_files_cbox.setObjectName(u"delete_merged_files_cbox")
        self.delete_merged_files_cbox.setCheckable(True)
        self.delete_merged_files_cbox.setChecked(True)
        self.actionExport_As_PEM = QAction(PEMHub)
        self.actionExport_As_PEM.setObjectName(u"actionExport_As_PEM")
        self.action_XYZ = QAction(PEMHub)
        self.action_XYZ.setObjectName(u"action_XYZ")
        self.actionExport_Processed_PEM = QAction(PEMHub)
        self.actionExport_Processed_PEM.setObjectName(u"actionExport_Processed_PEM")
        self.actionGoogle_Earth = QAction(PEMHub)
        self.actionGoogle_Earth.setObjectName(u"actionGoogle_Earth")
        self.actionGoogle_Earth.setIcon(icon8)
        self.actionExport_Legacy_PEM = QAction(PEMHub)
        self.actionExport_Legacy_PEM.setObjectName(u"actionExport_Legacy_PEM")
        self.actionView_Logs = QAction(PEMHub)
        self.actionView_Logs.setObjectName(u"actionView_Logs")
        icon19 = QIcon()
        icon19.addFile(u"icons/txt_file.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionView_Logs.setIcon(icon19)
        self.actionTile_Map = QAction(PEMHub)
        self.actionTile_Map.setObjectName(u"actionTile_Map")
        icon20 = QIcon()
        icon20.addFile(u"icons/folium.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionTile_Map.setIcon(icon20)
        self.actionQuick_Map = QAction(PEMHub)
        self.actionQuick_Map.setObjectName(u"actionQuick_Map")
        icon21 = QIcon()
        icon21.addFile(u"icons/gps_viewer.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionQuick_Map.setIcon(icon21)
        self.actionLoop_Current_Calculator = QAction(PEMHub)
        self.actionLoop_Current_Calculator.setObjectName(u"actionLoop_Current_Calculator")
        icon22 = QIcon()
        icon22.addFile(u"icons/voltmeter.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionLoop_Current_Calculator.setIcon(icon22)
        self.actionStation_Order = QAction(PEMHub)
        self.actionStation_Order.setObjectName(u"actionStation_Order")
        self.actionMake_DXF = QAction(PEMHub)
        self.actionMake_DXF.setObjectName(u"actionMake_DXF")
        self.actionHeader_CSV = QAction(PEMHub)
        self.actionHeader_CSV.setObjectName(u"actionHeader_CSV")
        self.actionDark_Theme = QAction(PEMHub)
        self.actionDark_Theme.setObjectName(u"actionDark_Theme")
        self.actionDark_Theme.setCheckable(True)
        self.actionReset_Settings = QAction(PEMHub)
        self.actionReset_Settings.setObjectName(u"actionReset_Settings")
        icon23 = QIcon()
        icon23.addFile(u"icons/undo.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionReset_Settings.setIcon(icon23)
        self.actionRename_Merged_Files = QAction(PEMHub)
        self.actionRename_Merged_Files.setObjectName(u"actionRename_Merged_Files")
        self.actionRename_Merged_Files.setCheckable(True)
        self.actionRename_Merged_Files.setChecked(True)
        self.actionAlt_Click_Plotting = QAction(PEMHub)
        self.actionAlt_Click_Plotting.setObjectName(u"actionAlt_Click_Plotting")
        self.actionAlt_Click_Plotting.setCheckable(True)
        self.actionAlt_Click_Plotting.setChecked(True)
        self.actionAdd_Mapbox_Token = QAction(PEMHub)
        self.actionAdd_Mapbox_Token.setObjectName(u"actionAdd_Mapbox_Token")
        self.actionRe_Open_Last_Files = QAction(PEMHub)
        self.actionRe_Open_Last_Files.setObjectName(u"actionRe_Open_Last_Files")
        self.actionRe_Open_Last_Files.setCheckable(True)
        self.actionRe_Open_Last_Files.setChecked(True)
        self.actionSave_Settings = QAction(PEMHub)
        self.actionSave_Settings.setObjectName(u"actionSave_Settings")
        self.actionSave_Settings.setIcon(icon2)
        self.actionNRCan_Declination_Calculator = QAction(PEMHub)
        self.actionNRCan_Declination_Calculator.setObjectName(u"actionNRCan_Declination_Calculator")
        icon24 = QIcon()
        icon24.addFile(u"icons/canada.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionNRCan_Declination_Calculator.setIcon(icon24)
        self.actionGPS_Extractor = QAction(PEMHub)
        self.actionGPS_Extractor.setObjectName(u"actionGPS_Extractor")
        icon25 = QIcon()
        icon25.addFile(u"icons/gps_extractor.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionGPS_Extractor.setIcon(icon25)
        self.actionKMZ_to_CSV = QAction(PEMHub)
        self.actionKMZ_to_CSV.setObjectName(u"actionKMZ_to_CSV")
        self.actionKMZ_to_CSV.setIcon(icon8)
        self.centralwidget = QWidget(PEMHub)
        self.centralwidget.setObjectName(u"centralwidget")
        self.centralwidget.setAcceptDrops(True)
        self.gridLayout_15 = QGridLayout(self.centralwidget)
        self.gridLayout_15.setSpacing(0)
        self.gridLayout_15.setObjectName(u"gridLayout_15")
        self.gridLayout_15.setContentsMargins(0, 0, 0, 0)
        self.central_frame = QFrame(self.centralwidget)
        self.central_frame.setObjectName(u"central_frame")
        self.central_frame.setMinimumSize(QSize(100, 0))
        self.central_frame.setFrameShape(QFrame.StyledPanel)
        self.central_frame.setFrameShadow(QFrame.Raised)
        self.horizontalLayout = QHBoxLayout(self.central_frame)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName(u"horizontalLayout")
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.splitter_2 = QSplitter(self.central_frame)
        self.splitter_2.setObjectName(u"splitter_2")
        self.splitter_2.setOrientation(Qt.Horizontal)
        self.splitter_2.setHandleWidth(3)
        self.splitter_2.setChildrenCollapsible(False)
        self.project_frame = QFrame(self.splitter_2)
        self.project_frame.setObjectName(u"project_frame")
        sizePolicy1 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.project_frame.sizePolicy().hasHeightForWidth())
        self.project_frame.setSizePolicy(sizePolicy1)
        self.project_frame.setMinimumSize(QSize(0, 0))
        self.project_frame.setMaximumSize(QSize(16777215, 16777215))
        self.project_frame.setBaseSize(QSize(0, 0))
        self.project_frame.setFocusPolicy(Qt.StrongFocus)
        self.project_frame.setFrameShape(QFrame.NoFrame)
        self.project_frame.setFrameShadow(QFrame.Sunken)
        self.verticalLayout = QVBoxLayout(self.project_frame)
        self.verticalLayout.setObjectName(u"verticalLayout")
        self.verticalLayout.setContentsMargins(6, 6, 6, 6)
        self.groupBox_6 = QGroupBox(self.project_frame)
        self.groupBox_6.setObjectName(u"groupBox_6")
        sizePolicy2 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Maximum)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.groupBox_6.sizePolicy().hasHeightForWidth())
        self.groupBox_6.setSizePolicy(sizePolicy2)
        self.groupBox_6.setMinimumSize(QSize(0, 100))
        self.groupBox_6.setMaximumSize(QSize(16777215, 16777215))
        self.groupBox_6.setAlignment(Qt.AlignCenter)
        self.groupBox_6.setFlat(False)
        self.gridLayout_6 = QGridLayout(self.groupBox_6)
        self.gridLayout_6.setObjectName(u"gridLayout_6")
        self.share_loop_cbox = QCheckBox(self.groupBox_6)
        self.share_loop_cbox.setObjectName(u"share_loop_cbox")
        sizePolicy1.setHeightForWidth(self.share_loop_cbox.sizePolicy().hasHeightForWidth())
        self.share_loop_cbox.setSizePolicy(sizePolicy1)
        self.share_loop_cbox.setCheckable(True)
        self.share_loop_cbox.setChecked(True)

        self.gridLayout_6.addWidget(self.share_loop_cbox, 3, 0, 1, 1)

        self.apply_shared_header_btn = QPushButton(self.groupBox_6)
        self.apply_shared_header_btn.setObjectName(u"apply_shared_header_btn")

        self.gridLayout_6.addWidget(self.apply_shared_header_btn, 6, 0, 1, 2)

        self.loop_edit = QLineEdit(self.groupBox_6)
        self.loop_edit.setObjectName(u"loop_edit")
        sizePolicy3 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Fixed)
        sizePolicy3.setHorizontalStretch(0)
        sizePolicy3.setVerticalStretch(0)
        sizePolicy3.setHeightForWidth(self.loop_edit.sizePolicy().hasHeightForWidth())
        self.loop_edit.setSizePolicy(sizePolicy3)
        self.loop_edit.setMinimumSize(QSize(0, 20))
        self.loop_edit.setMaximumSize(QSize(16777215, 16777215))

        self.gridLayout_6.addWidget(self.loop_edit, 3, 1, 1, 1)

        self.grid_edit = QLineEdit(self.groupBox_6)
        self.grid_edit.setObjectName(u"grid_edit")
        sizePolicy3.setHeightForWidth(self.grid_edit.sizePolicy().hasHeightForWidth())
        self.grid_edit.setSizePolicy(sizePolicy3)
        self.grid_edit.setMinimumSize(QSize(0, 20))
        self.grid_edit.setMaximumSize(QSize(16777215, 16777215))
        self.grid_edit.setFrame(True)

        self.gridLayout_6.addWidget(self.grid_edit, 2, 1, 1, 1)

        self.share_client_cbox = QCheckBox(self.groupBox_6)
        self.share_client_cbox.setObjectName(u"share_client_cbox")
        sizePolicy4 = QSizePolicy(QSizePolicy.Maximum, QSizePolicy.Preferred)
        sizePolicy4.setHorizontalStretch(0)
        sizePolicy4.setVerticalStretch(0)
        sizePolicy4.setHeightForWidth(self.share_client_cbox.sizePolicy().hasHeightForWidth())
        self.share_client_cbox.setSizePolicy(sizePolicy4)
        self.share_client_cbox.setChecked(True)

        self.gridLayout_6.addWidget(self.share_client_cbox, 1, 0, 1, 1)

        self.share_grid_cbox = QCheckBox(self.groupBox_6)
        self.share_grid_cbox.setObjectName(u"share_grid_cbox")
        sizePolicy1.setHeightForWidth(self.share_grid_cbox.sizePolicy().hasHeightForWidth())
        self.share_grid_cbox.setSizePolicy(sizePolicy1)
        self.share_grid_cbox.setChecked(True)

        self.gridLayout_6.addWidget(self.share_grid_cbox, 2, 0, 1, 1)

        self.client_edit = QLineEdit(self.groupBox_6)
        self.client_edit.setObjectName(u"client_edit")
        sizePolicy3.setHeightForWidth(self.client_edit.sizePolicy().hasHeightForWidth())
        self.client_edit.setSizePolicy(sizePolicy3)
        self.client_edit.setMinimumSize(QSize(0, 20))
        self.client_edit.setMaximumSize(QSize(16777215, 16777215))
        self.client_edit.setFrame(True)

        self.gridLayout_6.addWidget(self.client_edit, 1, 1, 1, 1)

        self.format_header_btn = QPushButton(self.groupBox_6)
        self.format_header_btn.setObjectName(u"format_header_btn")

        self.gridLayout_6.addWidget(self.format_header_btn, 4, 0, 1, 2)

        self.line = QFrame(self.groupBox_6)
        self.line.setObjectName(u"line")
        self.line.setFrameShape(QFrame.HLine)
        self.line.setFrameShadow(QFrame.Sunken)

        self.gridLayout_6.addWidget(self.line, 5, 0, 1, 2)


        self.verticalLayout.addWidget(self.groupBox_6)

        self.verticalSpacer = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout.addItem(self.verticalSpacer)

        self.splitter_2.addWidget(self.project_frame)
        self.middle_frame = QFrame(self.splitter_2)
        self.middle_frame.setObjectName(u"middle_frame")
        sizePolicy1.setHeightForWidth(self.middle_frame.sizePolicy().hasHeightForWidth())
        self.middle_frame.setSizePolicy(sizePolicy1)
        self.middle_frame.setMinimumSize(QSize(0, 0))
        self.middle_frame.setFrameShape(QFrame.NoFrame)
        self.middle_frame.setFrameShadow(QFrame.Raised)
        self.verticalLayout_3 = QVBoxLayout(self.middle_frame)
        self.verticalLayout_3.setSpacing(0)
        self.verticalLayout_3.setObjectName(u"verticalLayout_3")
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.splitter = QSplitter(self.middle_frame)
        self.splitter.setObjectName(u"splitter")
        self.splitter.setOrientation(Qt.Vertical)
        self.splitter.setHandleWidth(3)
        self.splitter.setChildrenCollapsible(False)
        self.table = QTableWidget(self.splitter)
        if (self.table.columnCount() < 15):
            self.table.setColumnCount(15)
        __qtablewidgetitem = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(0, __qtablewidgetitem)
        __qtablewidgetitem1 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(1, __qtablewidgetitem1)
        __qtablewidgetitem2 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(2, __qtablewidgetitem2)
        __qtablewidgetitem3 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(3, __qtablewidgetitem3)
        __qtablewidgetitem4 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(4, __qtablewidgetitem4)
        __qtablewidgetitem5 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(5, __qtablewidgetitem5)
        __qtablewidgetitem6 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(6, __qtablewidgetitem6)
        __qtablewidgetitem7 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(7, __qtablewidgetitem7)
        __qtablewidgetitem8 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(8, __qtablewidgetitem8)
        __qtablewidgetitem9 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(9, __qtablewidgetitem9)
        __qtablewidgetitem10 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(10, __qtablewidgetitem10)
        __qtablewidgetitem11 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(11, __qtablewidgetitem11)
        __qtablewidgetitem12 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(12, __qtablewidgetitem12)
        __qtablewidgetitem13 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(13, __qtablewidgetitem13)
        __qtablewidgetitem14 = QTableWidgetItem()
        self.table.setHorizontalHeaderItem(14, __qtablewidgetitem14)
        self.table.setObjectName(u"table")
        sizePolicy5 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy5.setHorizontalStretch(0)
        sizePolicy5.setVerticalStretch(1)
        sizePolicy5.setHeightForWidth(self.table.sizePolicy().hasHeightForWidth())
        self.table.setSizePolicy(sizePolicy5)
        self.table.setMinimumSize(QSize(0, 0))
        self.table.setMouseTracking(True)
        self.table.setContextMenuPolicy(Qt.NoContextMenu)
        self.table.setFrameShape(QFrame.StyledPanel)
        self.table.setFrameShadow(QFrame.Plain)
        self.table.setSizeAdjustPolicy(QAbstractScrollArea.AdjustToContents)
        self.table.setDragEnabled(False)
        self.table.setAlternatingRowColors(False)
        self.table.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.table.setSelectionBehavior(QAbstractItemView.SelectRows)
        self.table.setHorizontalScrollMode(QAbstractItemView.ScrollPerPixel)
        self.splitter.addWidget(self.table)
        self.table.horizontalHeader().setHighlightSections(False)
        self.table.horizontalHeader().setStretchLastSection(False)
        self.directory_frame = QFrame(self.splitter)
        self.directory_frame.setObjectName(u"directory_frame")
        sizePolicy2.setHeightForWidth(self.directory_frame.sizePolicy().hasHeightForWidth())
        self.directory_frame.setSizePolicy(sizePolicy2)
        self.directory_frame.setMinimumSize(QSize(0, 250))
        self.directory_frame.setFrameShape(QFrame.StyledPanel)
        self.directory_frame.setFrameShadow(QFrame.Plain)
        self.horizontalLayout_2 = QHBoxLayout(self.directory_frame)
        self.horizontalLayout_2.setSpacing(6)
        self.horizontalLayout_2.setObjectName(u"horizontalLayout_2")
        self.horizontalLayout_2.setContentsMargins(1, 1, 1, 1)
        self.splitter_3 = QSplitter(self.directory_frame)
        self.splitter_3.setObjectName(u"splitter_3")
        self.splitter_3.setOrientation(Qt.Horizontal)
        self.splitter_3.setHandleWidth(3)
        self.splitter_3.setChildrenCollapsible(False)
        self.project_dir_frame = QFrame(self.splitter_3)
        self.project_dir_frame.setObjectName(u"project_dir_frame")
        sizePolicy6 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Preferred)
        sizePolicy6.setHorizontalStretch(1)
        sizePolicy6.setVerticalStretch(0)
        sizePolicy6.setHeightForWidth(self.project_dir_frame.sizePolicy().hasHeightForWidth())
        self.project_dir_frame.setSizePolicy(sizePolicy6)
        self.project_dir_frame.setMinimumSize(QSize(0, 0))
        self.project_dir_frame.setFrameShape(QFrame.NoFrame)
        self.project_dir_frame.setFrameShadow(QFrame.Raised)
        self.verticalLayout_2 = QVBoxLayout(self.project_dir_frame)
        self.verticalLayout_2.setObjectName(u"verticalLayout_2")
        self.verticalLayout_2.setContentsMargins(6, 6, 6, 6)
        self.project_dir_label = QLabel(self.project_dir_frame)
        self.project_dir_label.setObjectName(u"project_dir_label")
        sizePolicy7 = QSizePolicy(QSizePolicy.Preferred, QSizePolicy.Maximum)
        sizePolicy7.setHorizontalStretch(0)
        sizePolicy7.setVerticalStretch(0)
        sizePolicy7.setHeightForWidth(self.project_dir_label.sizePolicy().hasHeightForWidth())
        self.project_dir_label.setSizePolicy(sizePolicy7)
        self.project_dir_label.setMinimumSize(QSize(0, 0))
        self.project_dir_label.setMaximumSize(QSize(16777215, 16777215))
        self.project_dir_label.setAlignment(Qt.AlignCenter)

        self.verticalLayout_2.addWidget(self.project_dir_label)

        self.project_tree = QTreeView(self.project_dir_frame)
        self.project_tree.setObjectName(u"project_tree")
        sizePolicy8 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        sizePolicy8.setHorizontalStretch(0)
        sizePolicy8.setVerticalStretch(0)
        sizePolicy8.setHeightForWidth(self.project_tree.sizePolicy().hasHeightForWidth())
        self.project_tree.setSizePolicy(sizePolicy8)
        self.project_tree.setMinimumSize(QSize(150, 0))
        self.project_tree.setAutoExpandDelay(0)

        self.verticalLayout_2.addWidget(self.project_tree)

        self.splitter_3.addWidget(self.project_dir_frame)
        self.available_pems_frame = QFrame(self.splitter_3)
        self.available_pems_frame.setObjectName(u"available_pems_frame")
        sizePolicy1.setHeightForWidth(self.available_pems_frame.sizePolicy().hasHeightForWidth())
        self.available_pems_frame.setSizePolicy(sizePolicy1)
        self.available_pems_frame.setMinimumSize(QSize(0, 0))
        self.available_pems_frame.setFrameShape(QFrame.NoFrame)
        self.available_pems_frame.setFrameShadow(QFrame.Raised)
        self.gridLayout_14 = QGridLayout(self.available_pems_frame)
        self.gridLayout_14.setObjectName(u"gridLayout_14")
        self.gridLayout_14.setContentsMargins(6, 6, 6, 6)
        self.pem_list = QListWidget(self.available_pems_frame)
        self.pem_list.setObjectName(u"pem_list")
        sizePolicy8.setHeightForWidth(self.pem_list.sizePolicy().hasHeightForWidth())
        self.pem_list.setSizePolicy(sizePolicy8)
        self.pem_list.setMinimumSize(QSize(150, 0))
        self.pem_list.setMaximumSize(QSize(1677700, 1677700))
        self.pem_list.setDragEnabled(False)
        self.pem_list.setDragDropMode(QAbstractItemView.NoDragDrop)
        self.pem_list.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.pem_list.setSelectionBehavior(QAbstractItemView.SelectRows)

        self.gridLayout_14.addWidget(self.pem_list, 1, 0, 4, 1)

        self.label_7 = QLabel(self.available_pems_frame)
        self.label_7.setObjectName(u"label_7")
        sizePolicy7.setHeightForWidth(self.label_7.sizePolicy().hasHeightForWidth())
        self.label_7.setSizePolicy(sizePolicy7)
        self.label_7.setAlignment(Qt.AlignCenter)

        self.gridLayout_14.addWidget(self.label_7, 0, 0, 1, 1)

        self.frame = QFrame(self.available_pems_frame)
        self.frame.setObjectName(u"frame")
        self.frame.setFrameShape(QFrame.NoFrame)
        self.frame.setFrameShadow(QFrame.Raised)
        self.verticalLayout_4 = QVBoxLayout(self.frame)
        self.verticalLayout_4.setObjectName(u"verticalLayout_4")
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.refresh_pem_list_btn = QPushButton(self.frame)
        self.refresh_pem_list_btn.setObjectName(u"refresh_pem_list_btn")
        sizePolicy1.setHeightForWidth(self.refresh_pem_list_btn.sizePolicy().hasHeightForWidth())
        self.refresh_pem_list_btn.setSizePolicy(sizePolicy1)
        self.refresh_pem_list_btn.setMaximumSize(QSize(23, 23))
        icon26 = QIcon()
        icon26.addFile(u"icons/refresh.png", QSize(), QIcon.Normal, QIcon.Off)
        self.refresh_pem_list_btn.setIcon(icon26)
        self.refresh_pem_list_btn.setFlat(False)

        self.verticalLayout_4.addWidget(self.refresh_pem_list_btn)

        self.filter_pem_list_btn = QPushButton(self.frame)
        self.filter_pem_list_btn.setObjectName(u"filter_pem_list_btn")
        self.filter_pem_list_btn.setMaximumSize(QSize(23, 23))
        icon27 = QIcon()
        icon27.addFile(u"icons/filter.png", QSize(), QIcon.Normal, QIcon.Off)
        self.filter_pem_list_btn.setIcon(icon27)

        self.verticalLayout_4.addWidget(self.filter_pem_list_btn)

        self.verticalSpacer_2 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_4.addItem(self.verticalSpacer_2)

        self.add_pem_btn = QPushButton(self.frame)
        self.add_pem_btn.setObjectName(u"add_pem_btn")
        self.add_pem_btn.setEnabled(False)
        sizePolicy9 = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy9.setHorizontalStretch(0)
        sizePolicy9.setVerticalStretch(0)
        sizePolicy9.setHeightForWidth(self.add_pem_btn.sizePolicy().hasHeightForWidth())
        self.add_pem_btn.setSizePolicy(sizePolicy9)
        self.add_pem_btn.setMinimumSize(QSize(0, 0))
        self.add_pem_btn.setMaximumSize(QSize(23, 23))
        icon28 = QIcon()
        icon28.addFile(u"icons/add_square.png", QSize(), QIcon.Normal, QIcon.Off)
        self.add_pem_btn.setIcon(icon28)
        self.add_pem_btn.setIconSize(QSize(20, 20))
        self.add_pem_btn.setFlat(True)

        self.verticalLayout_4.addWidget(self.add_pem_btn)

        self.remove_pem_btn = QPushButton(self.frame)
        self.remove_pem_btn.setObjectName(u"remove_pem_btn")
        self.remove_pem_btn.setEnabled(False)
        sizePolicy9.setHeightForWidth(self.remove_pem_btn.sizePolicy().hasHeightForWidth())
        self.remove_pem_btn.setSizePolicy(sizePolicy9)
        self.remove_pem_btn.setMinimumSize(QSize(0, 0))
        self.remove_pem_btn.setMaximumSize(QSize(23, 23))
        icon29 = QIcon()
        icon29.addFile(u"icons/remove.png", QSize(), QIcon.Normal, QIcon.Off)
        self.remove_pem_btn.setIcon(icon29)
        self.remove_pem_btn.setIconSize(QSize(20, 20))
        self.remove_pem_btn.setFlat(True)

        self.verticalLayout_4.addWidget(self.remove_pem_btn)


        self.gridLayout_14.addWidget(self.frame, 1, 1, 1, 1)

        self.splitter_3.addWidget(self.available_pems_frame)
        self.available_gps_frame = QFrame(self.splitter_3)
        self.available_gps_frame.setObjectName(u"available_gps_frame")
        sizePolicy1.setHeightForWidth(self.available_gps_frame.sizePolicy().hasHeightForWidth())
        self.available_gps_frame.setSizePolicy(sizePolicy1)
        self.available_gps_frame.setMinimumSize(QSize(0, 0))
        self.available_gps_frame.setFrameShape(QFrame.NoFrame)
        self.available_gps_frame.setFrameShadow(QFrame.Raised)
        self.gridLayout_13 = QGridLayout(self.available_gps_frame)
        self.gridLayout_13.setObjectName(u"gridLayout_13")
        self.gridLayout_13.setContentsMargins(6, 6, 6, 6)
        self.label_6 = QLabel(self.available_gps_frame)
        self.label_6.setObjectName(u"label_6")
        sizePolicy7.setHeightForWidth(self.label_6.sizePolicy().hasHeightForWidth())
        self.label_6.setSizePolicy(sizePolicy7)
        self.label_6.setAlignment(Qt.AlignCenter)

        self.gridLayout_13.addWidget(self.label_6, 0, 0, 1, 2)

        self.gps_list = QListWidget(self.available_gps_frame)
        self.gps_list.setObjectName(u"gps_list")
        sizePolicy10 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Preferred)
        sizePolicy10.setHorizontalStretch(1)
        sizePolicy10.setVerticalStretch(0)
        sizePolicy10.setHeightForWidth(self.gps_list.sizePolicy().hasHeightForWidth())
        self.gps_list.setSizePolicy(sizePolicy10)
        self.gps_list.setMinimumSize(QSize(150, 0))
        self.gps_list.setMaximumSize(QSize(1677700, 1677700))
        self.gps_list.setDragEnabled(False)
        self.gps_list.setDragDropMode(QAbstractItemView.NoDragDrop)
        self.gps_list.setSelectionMode(QAbstractItemView.ExtendedSelection)
        self.gps_list.setSelectionBehavior(QAbstractItemView.SelectRows)

        self.gridLayout_13.addWidget(self.gps_list, 1, 0, 4, 2)

        self.frame_5 = QFrame(self.available_gps_frame)
        self.frame_5.setObjectName(u"frame_5")
        self.frame_5.setFrameShape(QFrame.NoFrame)
        self.frame_5.setFrameShadow(QFrame.Raised)
        self.verticalLayout_5 = QVBoxLayout(self.frame_5)
        self.verticalLayout_5.setObjectName(u"verticalLayout_5")
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.refresh_gps_list_btn = QPushButton(self.frame_5)
        self.refresh_gps_list_btn.setObjectName(u"refresh_gps_list_btn")
        sizePolicy1.setHeightForWidth(self.refresh_gps_list_btn.sizePolicy().hasHeightForWidth())
        self.refresh_gps_list_btn.setSizePolicy(sizePolicy1)
        self.refresh_gps_list_btn.setMaximumSize(QSize(23, 23))
        self.refresh_gps_list_btn.setIcon(icon26)

        self.verticalLayout_5.addWidget(self.refresh_gps_list_btn)

        self.filter_gps_list_btn = QPushButton(self.frame_5)
        self.filter_gps_list_btn.setObjectName(u"filter_gps_list_btn")
        self.filter_gps_list_btn.setMaximumSize(QSize(23, 23))
        self.filter_gps_list_btn.setIcon(icon27)

        self.verticalLayout_5.addWidget(self.filter_gps_list_btn)

        self.verticalSpacer_3 = QSpacerItem(20, 40, QSizePolicy.Minimum, QSizePolicy.Expanding)

        self.verticalLayout_5.addItem(self.verticalSpacer_3)

        self.add_gps_btn = QPushButton(self.frame_5)
        self.add_gps_btn.setObjectName(u"add_gps_btn")
        self.add_gps_btn.setEnabled(False)
        sizePolicy9.setHeightForWidth(self.add_gps_btn.sizePolicy().hasHeightForWidth())
        self.add_gps_btn.setSizePolicy(sizePolicy9)
        self.add_gps_btn.setMinimumSize(QSize(0, 0))
        self.add_gps_btn.setMaximumSize(QSize(23, 23))
        self.add_gps_btn.setIcon(icon28)
        self.add_gps_btn.setIconSize(QSize(20, 20))
        self.add_gps_btn.setFlat(True)

        self.verticalLayout_5.addWidget(self.add_gps_btn)

        self.remove_gps_btn = QPushButton(self.frame_5)
        self.remove_gps_btn.setObjectName(u"remove_gps_btn")
        self.remove_gps_btn.setEnabled(False)
        sizePolicy9.setHeightForWidth(self.remove_gps_btn.sizePolicy().hasHeightForWidth())
        self.remove_gps_btn.setSizePolicy(sizePolicy9)
        self.remove_gps_btn.setMinimumSize(QSize(0, 0))
        self.remove_gps_btn.setMaximumSize(QSize(23, 23))
        self.remove_gps_btn.setIcon(icon29)
        self.remove_gps_btn.setIconSize(QSize(20, 20))
        self.remove_gps_btn.setFlat(True)

        self.verticalLayout_5.addWidget(self.remove_gps_btn)


        self.gridLayout_13.addWidget(self.frame_5, 1, 2, 1, 1)

        self.splitter_3.addWidget(self.available_gps_frame)

        self.horizontalLayout_2.addWidget(self.splitter_3)

        self.splitter.addWidget(self.directory_frame)

        self.verticalLayout_3.addWidget(self.splitter)

        self.splitter_2.addWidget(self.middle_frame)
        self.piw_frame = QFrame(self.splitter_2)
        self.piw_frame.setObjectName(u"piw_frame")
        sizePolicy1.setHeightForWidth(self.piw_frame.sizePolicy().hasHeightForWidth())
        self.piw_frame.setSizePolicy(sizePolicy1)
        self.piw_frame.setMinimumSize(QSize(300, 0))
        self.piw_frame.setMaximumSize(QSize(16777215, 16777215))
        self.piw_frame.setFrameShape(QFrame.NoFrame)
        self.piw_frame.setFrameShadow(QFrame.Sunken)
        self.verticalLayout_10 = QVBoxLayout(self.piw_frame)
        self.verticalLayout_10.setObjectName(u"verticalLayout_10")
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.stackedWidget = QStackedWidget(self.piw_frame)
        self.stackedWidget.setObjectName(u"stackedWidget")
        sizePolicy4.setHeightForWidth(self.stackedWidget.sizePolicy().hasHeightForWidth())
        self.stackedWidget.setSizePolicy(sizePolicy4)
        self.stackedWidget.setMinimumSize(QSize(0, 0))
        self.stackedWidget.setFrameShape(QFrame.NoFrame)

        self.verticalLayout_10.addWidget(self.stackedWidget)

        self.splitter_2.addWidget(self.piw_frame)

        self.horizontalLayout.addWidget(self.splitter_2)


        self.gridLayout_15.addWidget(self.central_frame, 0, 0, 2, 1)

        PEMHub.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(PEMHub)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1543, 21))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuFile.setTearOffEnabled(False)
        self.menuFile.setSeparatorsCollapsible(False)
        self.menuFile.setToolTipsVisible(True)
        self.menuExport_Files = QMenu(self.menuFile)
        self.menuExport_Files.setObjectName(u"menuExport_Files")
        icon30 = QIcon()
        icon30.addFile(u"icons/export.png", QSize(), QIcon.Normal, QIcon.Off)
        self.menuExport_Files.setIcon(icon30)
        self.menuPEM = QMenu(self.menubar)
        self.menuPEM.setObjectName(u"menuPEM")
        self.menuPEM.setToolTipsVisible(True)
        self.menuRename = QMenu(self.menuPEM)
        self.menuRename.setObjectName(u"menuRename")
        self.menuReverse_Polarity = QMenu(self.menuPEM)
        self.menuReverse_Polarity.setObjectName(u"menuReverse_Polarity")
        icon31 = QIcon()
        icon31.addFile(u"icons/reverse.png", QSize(), QIcon.Normal, QIcon.Off)
        self.menuReverse_Polarity.setIcon(icon31)
        self.menuGPS = QMenu(self.menubar)
        self.menuGPS.setObjectName(u"menuGPS")
        self.menuGPS.setToolTipsVisible(True)
        self.menuMap = QMenu(self.menubar)
        self.menuMap.setObjectName(u"menuMap")
        self.menuMap.setToolTipsVisible(True)
        self.menuTools = QMenu(self.menubar)
        self.menuTools.setObjectName(u"menuTools")
        self.menuTools.setToolTipsVisible(True)
        self.menuSettings = QMenu(self.menubar)
        self.menuSettings.setObjectName(u"menuSettings")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        PEMHub.setMenuBar(self.menubar)
        self.status_bar = QStatusBar(PEMHub)
        self.status_bar.setObjectName(u"status_bar")
        self.status_bar.setMinimumSize(QSize(0, 0))
        self.status_bar.setMaximumSize(QSize(16777215, 16777215))
        self.status_bar.setSizeGripEnabled(False)
        PEMHub.setStatusBar(self.status_bar)
        QWidget.setTabOrder(self.client_edit, self.grid_edit)
        QWidget.setTabOrder(self.grid_edit, self.loop_edit)
        QWidget.setTabOrder(self.loop_edit, self.apply_shared_header_btn)
        QWidget.setTabOrder(self.apply_shared_header_btn, self.share_client_cbox)
        QWidget.setTabOrder(self.share_client_cbox, self.share_grid_cbox)
        QWidget.setTabOrder(self.share_grid_cbox, self.share_loop_cbox)
        QWidget.setTabOrder(self.share_loop_cbox, self.project_frame)
        QWidget.setTabOrder(self.project_frame, self.table)
        QWidget.setTabOrder(self.table, self.project_tree)
        QWidget.setTabOrder(self.project_tree, self.remove_pem_btn)
        QWidget.setTabOrder(self.remove_pem_btn, self.add_pem_btn)
        QWidget.setTabOrder(self.add_pem_btn, self.pem_list)
        QWidget.setTabOrder(self.pem_list, self.refresh_pem_list_btn)
        QWidget.setTabOrder(self.refresh_pem_list_btn, self.filter_pem_list_btn)
        QWidget.setTabOrder(self.filter_pem_list_btn, self.remove_gps_btn)
        QWidget.setTabOrder(self.remove_gps_btn, self.add_gps_btn)
        QWidget.setTabOrder(self.add_gps_btn, self.gps_list)
        QWidget.setTabOrder(self.gps_list, self.refresh_gps_list_btn)
        QWidget.setTabOrder(self.refresh_gps_list_btn, self.filter_gps_list_btn)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuPEM.menuAction())
        self.menubar.addAction(self.menuGPS.menuAction())
        self.menubar.addAction(self.menuMap.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addAction(self.actionOpenFile)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSaveFiles)
        self.menuFile.addAction(self.menuExport_Files.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionBackup_Files)
        self.menuFile.addAction(self.actionImport_RI_Files)
        self.menuFile.addAction(self.actionAdd_Mapbox_Token)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionPrint_Plots_to_PDF)
        self.menuExport_Files.addAction(self.actionExport_As_PEM)
        self.menuExport_Files.addAction(self.actionExport_Legacy_PEM)
        self.menuExport_Files.addAction(self.actionExport_Processed_PEM)
        self.menuExport_Files.addSeparator()
        self.menuExport_Files.addAction(self.actionExport_As_XYZ)
        self.menuExport_Files.addAction(self.actionHeader_CSV)
        self.menuPEM.addAction(self.actionAverage_All_PEM_Files)
        self.menuPEM.addAction(self.actionSplit_All_PEM_Files)
        self.menuPEM.addSeparator()
        self.menuPEM.addAction(self.actionScale_All_Currents)
        self.menuPEM.addAction(self.actionChange_All_Coil_Areas)
        self.menuPEM.addSeparator()
        self.menuPEM.addAction(self.menuReverse_Polarity.menuAction())
        self.menuPEM.addSeparator()
        self.menuPEM.addAction(self.menuRename.menuAction())
        self.menuRename.addAction(self.actionRename_Files)
        self.menuRename.addAction(self.actionRename_Lines_Holes)
        self.menuRename.addSeparator()
        self.menuRename.addAction(self.actionAuto_Name_Lines_Holes)
        self.menuReverse_Polarity.addAction(self.actionReverseX_Component)
        self.menuReverse_Polarity.addAction(self.actionReverseY_Component)
        self.menuReverse_Polarity.addAction(self.actionReverseZ_Component)
        self.menuReverse_Polarity.addSeparator()
        self.menuReverse_Polarity.addAction(self.actionStation_Order)
        self.menuGPS.addAction(self.actionSave_as_KMZ)
        self.menuGPS.addAction(self.actionExport_All_GPS)
        self.menuGPS.addAction(self.actionConvert_GPS)
        self.menuMap.addAction(self.actionQuick_Map)
        self.menuMap.addAction(self.actionTile_Map)
        self.menuMap.addAction(self.actionContour_Map)
        self.menuMap.addSeparator()
        self.menuMap.addAction(self.action3D_Map)
        self.menuMap.addSeparator()
        self.menuMap.addAction(self.actionGoogle_Earth)
        self.menuMap.addAction(self.actionMake_DXF)
        self.menuTools.addAction(self.actionUnpacker)
        self.menuTools.addAction(self.actionDamping_Box_Plotter)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionLoop_Planner)
        self.menuTools.addAction(self.actionGrid_Planner)
        self.menuTools.addAction(self.actionLoop_Current_Calculator)
        self.menuTools.addAction(self.actionNRCan_Declination_Calculator)
        self.menuTools.addAction(self.actionConvert_Timebase_Frequency)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionGPX_Creator)
        self.menuTools.addAction(self.actionGPS_Extractor)
        self.menuSettings.addAction(self.actionSave_Settings)
        self.menuSettings.addAction(self.actionReset_Settings)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.actionDark_Theme)
        self.menuSettings.addAction(self.actionAlt_Click_Plotting)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.auto_sort_files_cbox)
        self.menuSettings.addAction(self.auto_create_backup_files_cbox)
        self.menuSettings.addSeparator()
        self.menuSettings.addAction(self.delete_merged_files_cbox)
        self.menuSettings.addAction(self.actionRename_Merged_Files)
        self.menuHelp.addAction(self.actionView_Logs)

        self.retranslateUi(PEMHub)

        self.refresh_pem_list_btn.setDefault(False)


        QMetaObject.connectSlotsByName(PEMHub)
    # setupUi

    def retranslateUi(self, PEMHub):
        PEMHub.setWindowTitle(QCoreApplication.translate("PEMHub", u"PEMPro", None))
        self.actionOpen.setText(QCoreApplication.translate("PEMHub", u"Open...", None))
        self.actionSave_Files.setText(QCoreApplication.translate("PEMHub", u"Save Files", None))
        self.actionOpenFile.setText(QCoreApplication.translate("PEMHub", u"Open Files...", None))
#if QT_CONFIG(tooltip)
        self.actionOpenFile.setToolTip(QCoreApplication.translate("PEMHub", u"Open PEM or DMP files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionOpenFile.setStatusTip(QCoreApplication.translate("PEMHub", u"Open PEM or DMP files.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionOpenFile.setShortcut(QCoreApplication.translate("PEMHub", u"Ctrl+O", None))
#endif // QT_CONFIG(shortcut)
        self.actionSaveFiles.setText(QCoreApplication.translate("PEMHub", u"Save Files", None))
#if QT_CONFIG(tooltip)
        self.actionSaveFiles.setToolTip(QCoreApplication.translate("PEMHub", u"Save all PEM files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionSaveFiles.setStatusTip(QCoreApplication.translate("PEMHub", u"Save all PEM files.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionSaveFiles.setShortcut(QCoreApplication.translate("PEMHub", u"Ctrl+S", None))
#endif // QT_CONFIG(shortcut)
        self.actionExport_As_XYZ.setText(QCoreApplication.translate("PEMHub", u"XYZ", None))
#if QT_CONFIG(tooltip)
        self.actionExport_As_XYZ.setToolTip(QCoreApplication.translate("PEMHub", u"Export all PEM files as XYZ files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionExport_As_XYZ.setStatusTip(QCoreApplication.translate("PEMHub", u"Export all PEM files as XYZ files.", None))
#endif // QT_CONFIG(statustip)
        self.actionExport_Final_PEM_Files.setText(QCoreApplication.translate("PEMHub", u"Export Final PEM Files...", None))
#if QT_CONFIG(tooltip)
        self.actionExport_Final_PEM_Files.setToolTip(QCoreApplication.translate("PEMHub", u"Export all PEM files as deliverable files", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(shortcut)
        self.actionExport_Final_PEM_Files.setShortcut(QCoreApplication.translate("PEMHub", u"F11", None))
#endif // QT_CONFIG(shortcut)
        self.actionBackup_Files.setText(QCoreApplication.translate("PEMHub", u"Backup Files", None))
#if QT_CONFIG(tooltip)
        self.actionBackup_Files.setToolTip(QCoreApplication.translate("PEMHub", u"Create backup files of all PEM files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionBackup_Files.setStatusTip(QCoreApplication.translate("PEMHub", u"Create backup files of all PEM files.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionBackup_Files.setShortcut(QCoreApplication.translate("PEMHub", u"Ctrl+B", None))
#endif // QT_CONFIG(shortcut)
        self.actionImport_RI_Files.setText(QCoreApplication.translate("PEMHub", u"Import RI Files", None))
#if QT_CONFIG(tooltip)
        self.actionImport_RI_Files.setToolTip(QCoreApplication.translate("PEMHub", u"Import RI files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionImport_RI_Files.setStatusTip(QCoreApplication.translate("PEMHub", u"Import RI files.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionImport_RI_Files.setShortcut(QCoreApplication.translate("PEMHub", u"Ctrl+I", None))
#endif // QT_CONFIG(shortcut)
        self.actionPrint_Plots_to_PDF.setText(QCoreApplication.translate("PEMHub", u"Print Plots to PDF", None))
#if QT_CONFIG(tooltip)
        self.actionPrint_Plots_to_PDF.setToolTip(QCoreApplication.translate("PEMHub", u"Create delivery PDF plots for the PEM files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionPrint_Plots_to_PDF.setStatusTip(QCoreApplication.translate("PEMHub", u"Create delivery PDF plots for the PEM files.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionPrint_Plots_to_PDF.setShortcut(QCoreApplication.translate("PEMHub", u"F12", None))
#endif // QT_CONFIG(shortcut)
        self.actionRename_All_Lines_Holes.setText(QCoreApplication.translate("PEMHub", u"Rename All Lines/Holes", None))
        self.actionAverage_All_PEM_Files.setText(QCoreApplication.translate("PEMHub", u"Average All PEM Files", None))
#if QT_CONFIG(tooltip)
        self.actionAverage_All_PEM_Files.setToolTip(QCoreApplication.translate("PEMHub", u"Average all PEM files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionAverage_All_PEM_Files.setStatusTip(QCoreApplication.translate("PEMHub", u"Average all PEM files.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionAverage_All_PEM_Files.setShortcut(QCoreApplication.translate("PEMHub", u"F5", None))
#endif // QT_CONFIG(shortcut)
        self.actionSplit_All_PEM_Files.setText(QCoreApplication.translate("PEMHub", u"Split All PEM Files", None))
#if QT_CONFIG(tooltip)
        self.actionSplit_All_PEM_Files.setToolTip(QCoreApplication.translate("PEMHub", u"Remove on-time channels for all PEM files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionSplit_All_PEM_Files.setStatusTip(QCoreApplication.translate("PEMHub", u"Remove on-time channels for all PEM files.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionSplit_All_PEM_Files.setShortcut(QCoreApplication.translate("PEMHub", u"F6", None))
#endif // QT_CONFIG(shortcut)
        self.actionScale_All_Currents.setText(QCoreApplication.translate("PEMHub", u"Scale All Currents", None))
#if QT_CONFIG(tooltip)
        self.actionScale_All_Currents.setToolTip(QCoreApplication.translate("PEMHub", u"Scale the current of all PEM Files to the same value.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionScale_All_Currents.setStatusTip(QCoreApplication.translate("PEMHub", u"Scale the current of all PEM Files to the same value.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionScale_All_Currents.setShortcut(QCoreApplication.translate("PEMHub", u"F7", None))
#endif // QT_CONFIG(shortcut)
        self.actionChange_All_Coil_Areas.setText(QCoreApplication.translate("PEMHub", u"Change All Coil Areas", None))
#if QT_CONFIG(tooltip)
        self.actionChange_All_Coil_Areas.setToolTip(QCoreApplication.translate("PEMHub", u"Scale all coil areas of all PEM files to the same value.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionChange_All_Coil_Areas.setStatusTip(QCoreApplication.translate("PEMHub", u"Scale all coil areas of all PEM files to the same value.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionChange_All_Coil_Areas.setShortcut(QCoreApplication.translate("PEMHub", u"F8", None))
#endif // QT_CONFIG(shortcut)
        self.actionSave_as_KMZ.setText(QCoreApplication.translate("PEMHub", u"Save as KMZ", None))
#if QT_CONFIG(tooltip)
        self.actionSave_as_KMZ.setToolTip(QCoreApplication.translate("PEMHub", u"Create a KMZ file using the GPS of the PEM files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionSave_as_KMZ.setStatusTip(QCoreApplication.translate("PEMHub", u"Create a KMZ file using the GPS of the PEM files.", None))
#endif // QT_CONFIG(statustip)
        self.actionExport_All_GPS.setText(QCoreApplication.translate("PEMHub", u"Export All GPS", None))
#if QT_CONFIG(tooltip)
        self.actionExport_All_GPS.setToolTip(QCoreApplication.translate("PEMHub", u"Export all GPS in the PEM files to separate CSV files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionExport_All_GPS.setStatusTip(QCoreApplication.translate("PEMHub", u"Export all GPS in the PEM files to separate CSV files.", None))
#endif // QT_CONFIG(statustip)
        self.actionPlan_Map.setText(QCoreApplication.translate("PEMHub", u"Plan Map", None))
        self.action3D_Map.setText(QCoreApplication.translate("PEMHub", u"3D Map", None))
#if QT_CONFIG(tooltip)
        self.action3D_Map.setToolTip(QCoreApplication.translate("PEMHub", u"Plot all PEM files in a 3D map.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.action3D_Map.setStatusTip(QCoreApplication.translate("PEMHub", u"Plot all PEM files in a 3D map.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.action3D_Map.setShortcut(QCoreApplication.translate("PEMHub", u"Ctrl+Shift+M", None))
#endif // QT_CONFIG(shortcut)
        self.actionContour_Map.setText(QCoreApplication.translate("PEMHub", u"Contour Map", None))
#if QT_CONFIG(tooltip)
        self.actionContour_Map.setToolTip(QCoreApplication.translate("PEMHub", u"Show a contour map of surface PEM files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionContour_Map.setStatusTip(QCoreApplication.translate("PEMHub", u"Show a contour map of surface PEM files.", None))
#endif // QT_CONFIG(statustip)
        self.actionLoop_Planner.setText(QCoreApplication.translate("PEMHub", u"Loop Planner", None))
#if QT_CONFIG(tooltip)
        self.actionLoop_Planner.setToolTip(QCoreApplication.translate("PEMHub", u"Borehole loop planning tool.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionLoop_Planner.setStatusTip(QCoreApplication.translate("PEMHub", u"Borehole loop planning tool.", None))
#endif // QT_CONFIG(statustip)
        self.actionGrid_Planner.setText(QCoreApplication.translate("PEMHub", u"Grid Planner", None))
#if QT_CONFIG(tooltip)
        self.actionGrid_Planner.setToolTip(QCoreApplication.translate("PEMHub", u"Surface grid planning tool.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionGrid_Planner.setStatusTip(QCoreApplication.translate("PEMHub", u"Surface grid planning tool.", None))
#endif // QT_CONFIG(statustip)
        self.actionConvert_Timebase_Frequency.setText(QCoreApplication.translate("PEMHub", u"Convert Timebase/Frequency", None))
#if QT_CONFIG(tooltip)
        self.actionConvert_Timebase_Frequency.setToolTip(QCoreApplication.translate("PEMHub", u"Two way conversion between timebase and frequency.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionConvert_Timebase_Frequency.setStatusTip(QCoreApplication.translate("PEMHub", u"Two way conversion between timebase and frequency.", None))
#endif // QT_CONFIG(statustip)
        self.actionDamping_Box_Plotter.setText(QCoreApplication.translate("PEMHub", u"Damping Box Plotter", None))
#if QT_CONFIG(tooltip)
        self.actionDamping_Box_Plotter.setToolTip(QCoreApplication.translate("PEMHub", u"Plot damping box data.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionDamping_Box_Plotter.setStatusTip(QCoreApplication.translate("PEMHub", u"Plot damping box data.", None))
#endif // QT_CONFIG(statustip)
        self.actionUnpacker.setText(QCoreApplication.translate("PEMHub", u"Unpacker", None))
#if QT_CONFIG(tooltip)
        self.actionUnpacker.setToolTip(QCoreApplication.translate("PEMHub", u"Unpack and organize raw data folders.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionUnpacker.setStatusTip(QCoreApplication.translate("PEMHub", u"Unpack and organize raw data folders.", None))
#endif // QT_CONFIG(statustip)
        self.actionGPX_Creator.setText(QCoreApplication.translate("PEMHub", u"GPX Creator", None))
#if QT_CONFIG(tooltip)
        self.actionGPX_Creator.setToolTip(QCoreApplication.translate("PEMHub", u"Convert a CSV file to a GPX file.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionGPX_Creator.setStatusTip(QCoreApplication.translate("PEMHub", u"Convert a CSV file to a GPX file.", None))
#endif // QT_CONFIG(statustip)
        self.actionAuto_name_Lines_Holes.setText(QCoreApplication.translate("PEMHub", u"Auto-Name Lines/Holes", None))
        self.actionAuto_Merge_All_Files.setText(QCoreApplication.translate("PEMHub", u"Auto-Merge Files", None))
#if QT_CONFIG(tooltip)
        self.actionAuto_Merge_All_Files.setToolTip(QCoreApplication.translate("PEMHub", u"Automatically merge all PEM files", None))
#endif // QT_CONFIG(tooltip)
        self.actionReverseX_Component.setText(QCoreApplication.translate("PEMHub", u"X Polarity", None))
#if QT_CONFIG(tooltip)
        self.actionReverseX_Component.setToolTip(QCoreApplication.translate("PEMHub", u"Reverse the polarity of all X component data.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionReverseX_Component.setStatusTip(QCoreApplication.translate("PEMHub", u"Reverse the polarity of all X component data.", None))
#endif // QT_CONFIG(statustip)
        self.actionReverseY_Component.setText(QCoreApplication.translate("PEMHub", u"Y Polarity", None))
#if QT_CONFIG(tooltip)
        self.actionReverseY_Component.setToolTip(QCoreApplication.translate("PEMHub", u"Reverse the polarity of all Y component data.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionReverseY_Component.setStatusTip(QCoreApplication.translate("PEMHub", u"Reverse the polarity of all Y component data.", None))
#endif // QT_CONFIG(statustip)
        self.actionReverseZ_Component.setText(QCoreApplication.translate("PEMHub", u"Z Polarity", None))
#if QT_CONFIG(tooltip)
        self.actionReverseZ_Component.setToolTip(QCoreApplication.translate("PEMHub", u"Reverse the polarity of all Z component data.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionReverseZ_Component.setStatusTip(QCoreApplication.translate("PEMHub", u"Reverse the polarity of all Z component data.", None))
#endif // QT_CONFIG(statustip)
        self.actionRename_Files.setText(QCoreApplication.translate("PEMHub", u"File Names", None))
#if QT_CONFIG(tooltip)
        self.actionRename_Files.setToolTip(QCoreApplication.translate("PEMHub", u"Rename all file names.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionRename_Files.setStatusTip(QCoreApplication.translate("PEMHub", u"Rename all file names.", None))
#endif // QT_CONFIG(statustip)
        self.actionRename_Lines_Holes.setText(QCoreApplication.translate("PEMHub", u"Lines/Hole Names", None))
#if QT_CONFIG(tooltip)
        self.actionRename_Lines_Holes.setToolTip(QCoreApplication.translate("PEMHub", u"Re-name all line/hole names.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionRename_Lines_Holes.setStatusTip(QCoreApplication.translate("PEMHub", u"Re-name all line/hole names.", None))
#endif // QT_CONFIG(statustip)
        self.actionAuto_Name_Lines_Holes.setText(QCoreApplication.translate("PEMHub", u"Auto-Name Lines/Holes", None))
#if QT_CONFIG(tooltip)
        self.actionAuto_Name_Lines_Holes.setToolTip(QCoreApplication.translate("PEMHub", u"Automatically re-name line/hole names based on their file names.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionAuto_Name_Lines_Holes.setStatusTip(QCoreApplication.translate("PEMHub", u"Automatically re-name line/hole names based on their file names.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionAuto_Name_Lines_Holes.setShortcut(QCoreApplication.translate("PEMHub", u"F4", None))
#endif // QT_CONFIG(shortcut)
        self.actionAuto_Name_Repeat_Stations.setText(QCoreApplication.translate("PEMHub", u"Auto-Name Repeat Stations", None))
#if QT_CONFIG(tooltip)
        self.actionAuto_Name_Repeat_Stations.setToolTip(QCoreApplication.translate("PEMHub", u"Automatically rename all repeat stations", None))
#endif // QT_CONFIG(tooltip)
        self.actionSort_Table_on_Import.setText(QCoreApplication.translate("PEMHub", u"Sort Table on Import", None))
        self.actionConvert_GPS.setText(QCoreApplication.translate("PEMHub", u"Convert GPS", None))
#if QT_CONFIG(tooltip)
        self.actionConvert_GPS.setToolTip(QCoreApplication.translate("PEMHub", u"Convert the GPS of the PEM files to a new CRS.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionConvert_GPS.setStatusTip(QCoreApplication.translate("PEMHub", u"Convert the GPS of the PEM files to a new CRS.", None))
#endif // QT_CONFIG(statustip)
        self.auto_sort_files_cbox.setText(QCoreApplication.translate("PEMHub", u"Sort Table Automatically", None))
#if QT_CONFIG(tooltip)
        self.auto_sort_files_cbox.setToolTip(QCoreApplication.translate("PEMHub", u"Automatically sort the table when a PEM file is opened.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.auto_sort_files_cbox.setStatusTip(QCoreApplication.translate("PEMHub", u"Automatically sort the table when a PEM file is opened.", None))
#endif // QT_CONFIG(statustip)
        self.auto_create_backup_files_cbox.setText(QCoreApplication.translate("PEMHub", u"Backup Files Automatically", None))
#if QT_CONFIG(tooltip)
        self.auto_create_backup_files_cbox.setToolTip(QCoreApplication.translate("PEMHub", u"Automatically create backup files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.auto_create_backup_files_cbox.setStatusTip(QCoreApplication.translate("PEMHub", u"Automatically create backup files.", None))
#endif // QT_CONFIG(statustip)
        self.delete_merged_files_cbox.setText(QCoreApplication.translate("PEMHub", u"Remove Merged Files", None))
#if QT_CONFIG(tooltip)
        self.delete_merged_files_cbox.setToolTip(QCoreApplication.translate("PEMHub", u"Remove pre-merged files after merging.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.delete_merged_files_cbox.setStatusTip(QCoreApplication.translate("PEMHub", u"Remove pre-merged files after merging.", None))
#endif // QT_CONFIG(statustip)
        self.actionExport_As_PEM.setText(QCoreApplication.translate("PEMHub", u"PEM", None))
#if QT_CONFIG(tooltip)
        self.actionExport_As_PEM.setToolTip(QCoreApplication.translate("PEMHub", u"Export all PEM files to a selected directory.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionExport_As_PEM.setStatusTip(QCoreApplication.translate("PEMHub", u"Export all PEM files to a selected directory.", None))
#endif // QT_CONFIG(statustip)
        self.action_XYZ.setText(QCoreApplication.translate("PEMHub", u"XYZ", None))
        self.actionExport_Processed_PEM.setText(QCoreApplication.translate("PEMHub", u"Processed PEM", None))
#if QT_CONFIG(tooltip)
        self.actionExport_Processed_PEM.setToolTip(QCoreApplication.translate("PEMHub", u"Averages, splits, and de-rotates (if applicable) and saves as a legacy PEM format.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionExport_Processed_PEM.setStatusTip(QCoreApplication.translate("PEMHub", u"Averages, splits, and de-rotates (if applicable) and saves as a legacy PEM format.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionExport_Processed_PEM.setShortcut(QCoreApplication.translate("PEMHub", u"F9", None))
#endif // QT_CONFIG(shortcut)
        self.actionGoogle_Earth.setText(QCoreApplication.translate("PEMHub", u"Google Earth", None))
#if QT_CONFIG(tooltip)
        self.actionGoogle_Earth.setToolTip(QCoreApplication.translate("PEMHub", u"View the GPS in the PEM files with Google Earth.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionGoogle_Earth.setStatusTip(QCoreApplication.translate("PEMHub", u"View the GPS in the PEM files with Google Earth.", None))
#endif // QT_CONFIG(statustip)
        self.actionExport_Legacy_PEM.setText(QCoreApplication.translate("PEMHub", u"Legacy PEM", None))
#if QT_CONFIG(tooltip)
        self.actionExport_Legacy_PEM.setToolTip(QCoreApplication.translate("PEMHub", u"Export as legacy PEM format that is compatible with Step.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionExport_Legacy_PEM.setStatusTip(QCoreApplication.translate("PEMHub", u"Export as legacy PEM format that is compatible with Step.", None))
#endif // QT_CONFIG(statustip)
        self.actionView_Logs.setText(QCoreApplication.translate("PEMHub", u"View Logs", None))
#if QT_CONFIG(tooltip)
        self.actionView_Logs.setToolTip(QCoreApplication.translate("PEMHub", u"View the program logs.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionView_Logs.setStatusTip(QCoreApplication.translate("PEMHub", u"View the program logs.", None))
#endif // QT_CONFIG(statustip)
        self.actionTile_Map.setText(QCoreApplication.translate("PEMHub", u"Tile Map", None))
#if QT_CONFIG(tooltip)
        self.actionTile_Map.setToolTip(QCoreApplication.translate("PEMHub", u"Interactive map with real-world basemaps (Requires internet connection).", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionTile_Map.setStatusTip(QCoreApplication.translate("PEMHub", u"Interactive map with real-world basemaps (Requires internet connection).", None))
#endif // QT_CONFIG(statustip)
        self.actionQuick_Map.setText(QCoreApplication.translate("PEMHub", u"Quick Map", None))
#if QT_CONFIG(tooltip)
        self.actionQuick_Map.setToolTip(QCoreApplication.translate("PEMHub", u"Simple plan map.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionQuick_Map.setStatusTip(QCoreApplication.translate("PEMHub", u"Simple plan map.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(shortcut)
        self.actionQuick_Map.setShortcut(QCoreApplication.translate("PEMHub", u"Ctrl+M", None))
#endif // QT_CONFIG(shortcut)
        self.actionLoop_Current_Calculator.setText(QCoreApplication.translate("PEMHub", u"Loop Current Calculator", None))
#if QT_CONFIG(tooltip)
        self.actionLoop_Current_Calculator.setToolTip(QCoreApplication.translate("PEMHub", u"Calculate theoretical loop current limits.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionLoop_Current_Calculator.setStatusTip(QCoreApplication.translate("PEMHub", u"Calculate theoretical loop current limits.", None))
#endif // QT_CONFIG(statustip)
        self.actionStation_Order.setText(QCoreApplication.translate("PEMHub", u"Station Order", None))
#if QT_CONFIG(tooltip)
        self.actionStation_Order.setToolTip(QCoreApplication.translate("PEMHub", u"Reverse the station numbers of all files, so the last station becomes the first station.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionStation_Order.setStatusTip(QCoreApplication.translate("PEMHub", u"Reverse the station numbers of all files, so the last station becomes the first station.", None))
#endif // QT_CONFIG(statustip)
        self.actionMake_DXF.setText(QCoreApplication.translate("PEMHub", u"Make DXF", None))
#if QT_CONFIG(tooltip)
        self.actionMake_DXF.setToolTip(QCoreApplication.translate("PEMHub", u"Create a DXF file from the GPS in the PEM files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionMake_DXF.setStatusTip(QCoreApplication.translate("PEMHub", u"Create a DXF file from the GPS in the PEM files.", None))
#endif // QT_CONFIG(statustip)
        self.actionHeader_CSV.setText(QCoreApplication.translate("PEMHub", u"Header CSV", None))
#if QT_CONFIG(tooltip)
        self.actionHeader_CSV.setToolTip(QCoreApplication.translate("PEMHub", u"Export all header information fromthe PEM files to a single CSV file.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionHeader_CSV.setStatusTip(QCoreApplication.translate("PEMHub", u"Export all header information fromthe PEM files to a single CSV file.", None))
#endif // QT_CONFIG(statustip)
        self.actionDark_Theme.setText(QCoreApplication.translate("PEMHub", u"Dark Theme", None))
#if QT_CONFIG(tooltip)
        self.actionDark_Theme.setToolTip(QCoreApplication.translate("PEMHub", u"Use a dark themed appearance.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionDark_Theme.setStatusTip(QCoreApplication.translate("PEMHub", u"Use a dark themed appearance.", None))
#endif // QT_CONFIG(statustip)
        self.actionReset_Settings.setText(QCoreApplication.translate("PEMHub", u"Reset Settings", None))
#if QT_CONFIG(tooltip)
        self.actionReset_Settings.setToolTip(QCoreApplication.translate("PEMHub", u"Reset the PEMPro settings to their default values.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionReset_Settings.setStatusTip(QCoreApplication.translate("PEMHub", u"Reset the PEMPro settings to their default values.", None))
#endif // QT_CONFIG(statustip)
        self.actionRename_Merged_Files.setText(QCoreApplication.translate("PEMHub", u"Rename Merged Files", None))
#if QT_CONFIG(tooltip)
        self.actionRename_Merged_Files.setToolTip(QCoreApplication.translate("PEMHub", u"Automatically rename pre-merged PEM files after merging.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionRename_Merged_Files.setStatusTip(QCoreApplication.translate("PEMHub", u"Automatically rename pre-merged PEM files after merging.", None))
#endif // QT_CONFIG(statustip)
        self.actionAlt_Click_Plotting.setText(QCoreApplication.translate("PEMHub", u"Alt-Click Plotting", None))
#if QT_CONFIG(tooltip)
        self.actionAlt_Click_Plotting.setToolTip(QCoreApplication.translate("PEMHub", u"Open the Plot Editor by Alt+Clicking a row.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionAlt_Click_Plotting.setStatusTip(QCoreApplication.translate("PEMHub", u"Open the Plot Editor by Alt+Clicking a row.", None))
#endif // QT_CONFIG(statustip)
        self.actionAdd_Mapbox_Token.setText(QCoreApplication.translate("PEMHub", u"Add Mapbox Token", None))
#if QT_CONFIG(tooltip)
        self.actionAdd_Mapbox_Token.setToolTip(QCoreApplication.translate("PEMHub", u"Add a new Mapbox token. Mapbox tokens are used in by Tools > Tilemap.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionAdd_Mapbox_Token.setStatusTip(QCoreApplication.translate("PEMHub", u"Add a new Mapbox token. Mapbox tokens are used in by Tools > Tilemap.", None))
#endif // QT_CONFIG(statustip)
        self.actionRe_Open_Last_Files.setText(QCoreApplication.translate("PEMHub", u"Re-Open Last Files", None))
        self.actionSave_Settings.setText(QCoreApplication.translate("PEMHub", u"Save Settings", None))
#if QT_CONFIG(tooltip)
        self.actionSave_Settings.setToolTip(QCoreApplication.translate("PEMHub", u"Save the current PEMPro settings.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionSave_Settings.setStatusTip(QCoreApplication.translate("PEMHub", u"Save the current PEMPro settings.", None))
#endif // QT_CONFIG(statustip)
        self.actionNRCan_Declination_Calculator.setText(QCoreApplication.translate("PEMHub", u"NRCan Declination Calculator", None))
#if QT_CONFIG(tooltip)
        self.actionNRCan_Declination_Calculator.setToolTip(QCoreApplication.translate("PEMHub", u"Open the webpage for NRCan's magnetic declination calculator.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionNRCan_Declination_Calculator.setStatusTip(QCoreApplication.translate("PEMHub", u"Open the webpage for NRCan's magnetic declination calculator.", None))
#endif // QT_CONFIG(statustip)
        self.actionGPS_Extractor.setText(QCoreApplication.translate("PEMHub", u"GPS Extractor", None))
#if QT_CONFIG(tooltip)
        self.actionGPS_Extractor.setToolTip(QCoreApplication.translate("PEMHub", u"Extract GPS information from GPX or KMZ files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.actionGPS_Extractor.setStatusTip(QCoreApplication.translate("PEMHub", u"Extract GPS information from GPX or KMZ files.", None))
#endif // QT_CONFIG(statustip)
        self.actionKMZ_to_CSV.setText(QCoreApplication.translate("PEMHub", u"KMZ Extractor", None))
        self.groupBox_6.setTitle(QCoreApplication.translate("PEMHub", u"Project Header", None))
        self.share_loop_cbox.setText(QCoreApplication.translate("PEMHub", u"Loop", None))
#if QT_CONFIG(tooltip)
        self.apply_shared_header_btn.setToolTip(QCoreApplication.translate("PEMHub", u"Apply the above header information to all PEM files.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.apply_shared_header_btn.setStatusTip(QCoreApplication.translate("PEMHub", u"Apply the above header information to all PEM files.", None))
#endif // QT_CONFIG(statustip)
        self.apply_shared_header_btn.setText(QCoreApplication.translate("PEMHub", u"Apply", None))
        self.share_client_cbox.setText(QCoreApplication.translate("PEMHub", u"Client", None))
        self.share_grid_cbox.setText(QCoreApplication.translate("PEMHub", u"Grid", None))
#if QT_CONFIG(tooltip)
        self.format_header_btn.setToolTip(QCoreApplication.translate("PEMHub", u"Apply 'Title' formatting to the Client and Grid text.", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.format_header_btn.setStatusTip(QCoreApplication.translate("PEMHub", u"Apply 'Title' formatting to the Client and Grid text.", None))
#endif // QT_CONFIG(statustip)
        self.format_header_btn.setText(QCoreApplication.translate("PEMHub", u"Auto Format", None))
        ___qtablewidgetitem = self.table.horizontalHeaderItem(0)
        ___qtablewidgetitem.setText(QCoreApplication.translate("PEMHub", u"File", None));
        ___qtablewidgetitem1 = self.table.horizontalHeaderItem(1)
        ___qtablewidgetitem1.setText(QCoreApplication.translate("PEMHub", u"Date", None));
        ___qtablewidgetitem2 = self.table.horizontalHeaderItem(2)
        ___qtablewidgetitem2.setText(QCoreApplication.translate("PEMHub", u"Client", None));
        ___qtablewidgetitem3 = self.table.horizontalHeaderItem(3)
        ___qtablewidgetitem3.setText(QCoreApplication.translate("PEMHub", u"Grid", None));
        ___qtablewidgetitem4 = self.table.horizontalHeaderItem(4)
        ___qtablewidgetitem4.setText(QCoreApplication.translate("PEMHub", u"Line/Hole", None));
        ___qtablewidgetitem5 = self.table.horizontalHeaderItem(5)
        ___qtablewidgetitem5.setText(QCoreApplication.translate("PEMHub", u"Loop", None));
        ___qtablewidgetitem6 = self.table.horizontalHeaderItem(6)
        ___qtablewidgetitem6.setText(QCoreApplication.translate("PEMHub", u"Current", None));
        ___qtablewidgetitem7 = self.table.horizontalHeaderItem(7)
        ___qtablewidgetitem7.setText(QCoreApplication.translate("PEMHub", u"Coil\n"
"Area", None));
        ___qtablewidgetitem8 = self.table.horizontalHeaderItem(8)
        ___qtablewidgetitem8.setText(QCoreApplication.translate("PEMHub", u"First\n"
"Station", None));
        ___qtablewidgetitem9 = self.table.horizontalHeaderItem(9)
        ___qtablewidgetitem9.setText(QCoreApplication.translate("PEMHub", u"Last\n"
"Station", None));
        ___qtablewidgetitem10 = self.table.horizontalHeaderItem(10)
        ___qtablewidgetitem10.setText(QCoreApplication.translate("PEMHub", u"Averaged", None));
        ___qtablewidgetitem11 = self.table.horizontalHeaderItem(11)
        ___qtablewidgetitem11.setText(QCoreApplication.translate("PEMHub", u"Split", None));
        ___qtablewidgetitem12 = self.table.horizontalHeaderItem(12)
        ___qtablewidgetitem12.setText(QCoreApplication.translate("PEMHub", u"Suffix\n"
"Warnings", None));
        ___qtablewidgetitem13 = self.table.horizontalHeaderItem(13)
        ___qtablewidgetitem13.setText(QCoreApplication.translate("PEMHub", u"Repeat\n"
"Warnings", None));
        ___qtablewidgetitem14 = self.table.horizontalHeaderItem(14)
        ___qtablewidgetitem14.setText(QCoreApplication.translate("PEMHub", u"Polarity\n"
"Warnings", None));
#if QT_CONFIG(tooltip)
        self.table.setToolTip("")
#endif // QT_CONFIG(tooltip)
        self.project_dir_label.setText(QCoreApplication.translate("PEMHub", u"Project Directory", None))
        self.label_7.setText(QCoreApplication.translate("PEMHub", u"Available PEM/DMP Files", None))
#if QT_CONFIG(tooltip)
        self.refresh_pem_list_btn.setToolTip(QCoreApplication.translate("PEMHub", u"Refresh", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.refresh_pem_list_btn.setStatusTip(QCoreApplication.translate("PEMHub", u"Refresh", None))
#endif // QT_CONFIG(statustip)
        self.refresh_pem_list_btn.setText("")
#if QT_CONFIG(tooltip)
        self.filter_pem_list_btn.setToolTip(QCoreApplication.translate("PEMHub", u"Filter", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.filter_pem_list_btn.setStatusTip(QCoreApplication.translate("PEMHub", u"Filter", None))
#endif // QT_CONFIG(statustip)
        self.filter_pem_list_btn.setText("")
#if QT_CONFIG(tooltip)
        self.add_pem_btn.setToolTip(QCoreApplication.translate("PEMHub", u"Add the selected PEM files to the project", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.add_pem_btn.setStatusTip(QCoreApplication.translate("PEMHub", u"Add the selected PEM files to the project", None))
#endif // QT_CONFIG(statustip)
        self.add_pem_btn.setText("")
#if QT_CONFIG(tooltip)
        self.remove_pem_btn.setToolTip(QCoreApplication.translate("PEMHub", u"Delete select file(s)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.remove_pem_btn.setStatusTip(QCoreApplication.translate("PEMHub", u"Delete select file(s)", None))
#endif // QT_CONFIG(statustip)
        self.remove_pem_btn.setText("")
        self.label_6.setText(QCoreApplication.translate("PEMHub", u"Available GPS Files", None))
#if QT_CONFIG(tooltip)
        self.refresh_gps_list_btn.setToolTip(QCoreApplication.translate("PEMHub", u"Refresh", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.refresh_gps_list_btn.setStatusTip(QCoreApplication.translate("PEMHub", u"Refresh", None))
#endif // QT_CONFIG(statustip)
        self.refresh_gps_list_btn.setText("")
#if QT_CONFIG(tooltip)
        self.filter_gps_list_btn.setToolTip(QCoreApplication.translate("PEMHub", u"Filter", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.filter_gps_list_btn.setStatusTip(QCoreApplication.translate("PEMHub", u"Filter", None))
#endif // QT_CONFIG(statustip)
        self.filter_gps_list_btn.setText("")
#if QT_CONFIG(tooltip)
        self.add_gps_btn.setToolTip(QCoreApplication.translate("PEMHub", u"Add the selected GPS files to the currently selected PEM file and Information tab", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.add_gps_btn.setStatusTip(QCoreApplication.translate("PEMHub", u"Add the selected GPS files to the currently selected PEM file and Information tab", None))
#endif // QT_CONFIG(statustip)
        self.add_gps_btn.setText("")
#if QT_CONFIG(tooltip)
        self.remove_gps_btn.setToolTip(QCoreApplication.translate("PEMHub", u"Delete select file(s)", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.remove_gps_btn.setStatusTip(QCoreApplication.translate("PEMHub", u"Delete select file(s)", None))
#endif // QT_CONFIG(statustip)
        self.remove_gps_btn.setText("")
        self.menuFile.setTitle(QCoreApplication.translate("PEMHub", u"File", None))
        self.menuExport_Files.setTitle(QCoreApplication.translate("PEMHub", u"Export Files As...", None))
        self.menuPEM.setTitle(QCoreApplication.translate("PEMHub", u"PEM", None))
        self.menuRename.setTitle(QCoreApplication.translate("PEMHub", u"Rename", None))
        self.menuReverse_Polarity.setTitle(QCoreApplication.translate("PEMHub", u"Reverse...", None))
        self.menuGPS.setTitle(QCoreApplication.translate("PEMHub", u"GPS", None))
        self.menuMap.setTitle(QCoreApplication.translate("PEMHub", u"Map", None))
        self.menuTools.setTitle(QCoreApplication.translate("PEMHub", u"Tools", None))
        self.menuSettings.setTitle(QCoreApplication.translate("PEMHub", u"Settings", None))
        self.menuHelp.setTitle(QCoreApplication.translate("PEMHub", u"Help", None))
    # retranslateUi

